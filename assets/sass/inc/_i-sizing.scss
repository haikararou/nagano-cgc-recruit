@charset 'UTF-8';
@use "sass:math";
@use "i-setting" as setting;

// @include sizing(width, wide, 365px, sp, 276px);
//  ==> width: clamp(276px, 7.46vw + 248px, 365px);
// （ビューポートがwide(1568px)のとき365px, sp(375px)のとき276pxになる自動補完値を設定）

// @include remsizing(font-size, wide, 14px, sp, 12px);
//  ==> font-size: clamp(0.75rem, 0.17vw + 0.70625rem, 0.875rem;
// （ビューポートがwide(1568px)のとき14px, sp(375px)のとき12pxになる自動補完値をremに変換して設定）

// ※scssファイル上での読みやすさ重視のため、mixinの引数に単位[px]が必要な仕様にしてあるのでご注意ください。

// 最終更新2022/06/22 百瀬　remバージョン追加

// // ブレークポイントの設定 ==> _i-setting.scss に記載
// //------------------------------------
// $breakpoints: (
//    sp : 375px,
//    tab: 769px,
//    lap: 1025px,
//    desk: 1201px,
//    vr : 1300px,
//    wide : 1568px,
//    full : 1700px,
// );

// 数値aの小数点以下を任意のn桁で四捨五入
//------------------------------------
@function variableRound($a, $n) {
  $nn: math.pow(10, $n);
  $nt: round($a * $nn);
  @return calc($nt / $nn);
}

// ２つのウィンドウ幅用のサイズをもとに変化直線の変化率を計算
//------------------------------------
@function autoSizeRatio($media1, $px1, $media2, $px2) {
  $width1: map-get(setting.$breakpoints, $media1);
  $width2: map-get(setting.$breakpoints, $media2);
  $resizeRatio: calc(($px1 - $px2) / ($width1 - $width2));
  $resizeOrigin: $px1 - ($width1 * $resizeRatio);
  @return variableRound(100vw * $resizeRatio, 2);
}

// ２つのウィンドウ幅用のサイズをもとに変化直線の原点を計算
//------------------------------------
@function autoSizeOrigin($media1, $px1, $media2, $px2) {
  $width: map-get(setting.$breakpoints, $media1);
  @return $px1 -
    variableRound(
      calc($width * autoSizeRatio($media1, $px1, $media2, $px2) / 100vw),
      1
    );
}

// ２つのウィンドウ幅用のサイズをもとに自動計算するプロパティを設定（pxで吐き出し）
//------------------------------------
@mixin sizing($property, $media1, $px1, $media2, $px2) {
  #{$property}: clamp(
    $px2,
    autoSizeRatio($media1, $px1, $media2, $px2) +
      autoSizeOrigin($media1, $px1, $media2, $px2),
    $px1
  );
}


//pxをremに変換
//--------------------------------------------
$BaseFontPx: 16px;
@function convertToRem($pixels) {
  @return calc($pixels / $BaseFontPx) * 1rem;
}

// ２つのウィンドウ幅用のサイズをもとに自動計算するプロパティを設定（remで吐き出し）
//------------------------------------
@mixin sizingRem($property, $media1, $px1, $media2, $px2) {
  #{$property}: clamp(
    convertToRem($px2),
    autoSizeRatio($media1, $px1, $media2, $px2) +
      convertToRem(autoSizeOrigin($media1, $px1, $media2, $px2)),
    convertToRem($px1)
  );
}
